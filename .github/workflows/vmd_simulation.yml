name: Simulation

on: [push, pull_request]

jobs:
  login:
    runs-on: ubuntu-latest

    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
    
  run-vmd:
    runs-on: ubuntu-latest
    needs: login

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        
      - name: Install Dependencies
        run: |
          sudo apt-get update

      - name: Pull and run the Docker image
        run: |
          docker pull activeeon/vmd
          
      - name: Run VMD Script
        run: |
          docker run -v ${{ github.workspace }}:/workspace -w /workspace activeeon/vmd vmd -dispdev text 5rsa.pdb -e set_protein.tcl -o /workspace/output

      - name: Run Second TCL Script
        run: |
          docker run -v ${{ github.workspace }}:/workspace -w /workspace activeeon/vmd vmd -dispdev text -args protein.pdb -e psfgen.tcl -o /workspace/output

      - name: Run Third TCL Script
        run: |
          docker run -v ${{ github.workspace }}:/workspace -w /workspace activeeon/vmd vmd -dispdev text -args system.psf system.pdb -e solvate.tcl -o /workspace/output

      - name: Run 4 TCL Script
        run: |
          docker run -v ${{ github.workspace }}:/workspace -w /workspace activeeon/vmd vmd -dispdev text -args solvated.psf solvated.pdb -e ionize.tcl -o /workspace/output

      - name: Run 5 TCL Script
        run: |
          docker run -v ${{ github.workspace }}:/workspace -w /workspace activeeon/vmd vmd -dispdev text -args ionized.psf ionized.pdb -e simulate.tcl -o /workspace/output

      # Optional: Upload output files as artifacts
      - name: Upload Outputs
        uses: actions/upload-artifact@v3
        with:
          name: simulation-results
          path: ${{ github.workspace }}/output
